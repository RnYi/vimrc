if !exists('g:vimrc_home')
    let g:vimrc_home=fnamemodify(resolve(expand('<sfile>:p')), ':h')
    let g:init_home=g:vimrc_home."/init"
endif

""""""""""""""""""
"  Load Plugins  "
""""""""""""""""""
call plug#begin()
" Theme
Plug 'sainnhe/sonokai'
" Colorized parentheses
" Plug 'luochen1990/rainbow'
" Indent line
Plug 'Yggdroot/indentLine', {'on': 'IndentLinesToggle'}
" Statusline
" Plug 'itchyny/lightline.vim'
" Show buffers on tabline
Plug 'ap/vim-buftabline'
" Completion
Plug 'neoclide/coc.nvim', {'branch': 'release'}
" Plug 'jackguo380/vim-lsp-cxx-highlight', {'for': ['c','cpp']}
" Align
Plug 'godlygeek/tabular', {'on':['Tabularize','AddTabularPatter','AddTabularPipeline']}
" Markdown
Plug 'iamcco/markdown-preview.nvim', {'do': 'cd app && yarn install'}
" Latex
Plug 'lervag/vimtex', {'for': ['tex','latex']}
" File explorer
Plug 'lambdalisue/fern.vim'
Plug 'lambdalisue/fern-git-status.vim'
if has('nvim')
    Plug 'antoinemadec/FixCursorHold.nvim'
endif
" Enhanced motion
" Plug 'justinmk/vim-sneak'
" Start-up
Plug 'mhinz/vim-startify'
Plug 'tweekmonster/startuptime.vim', {'on':'StartupTime'}
" Comment
Plug 'tpope/vim-commentary'
" Surround
Plug 'machakann/vim-sandwich'
" Snippets
Plug 'honza/vim-snippets'
Plug 'SirVer/ultisnips'
" Asynctasks
Plug 'skywind3000/asynctasks.vim'
Plug 'skywind3000/asyncrun.vim'
" Text objects
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-indent'
Plug 'sgur/vim-textobj-parameter'
" Input method
if g:sys_uname!='windows'
    Plug 'rlue/vim-barbaric'
endif
" Vim Fullscreen
" if g:sys_uname=='windows' && has('gui_running')
"     Plug 'xolox/vim-misc'
"     Plug 'xolox/vim-shell'
" endif
" Treesitter
if has('nvim')
    Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
endif
call plug#end()

exe "so ".g:vimrc_home."/vimrc.min"
exe "so ".g:init_home."/plugins.vim"
